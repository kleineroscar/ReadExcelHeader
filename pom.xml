<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.pentaho</groupId>
    <artifactId>pentaho-ce-jar-parent-pom</artifactId>
    <version>9.1.0.0-SNAPSHOT</version>
  </parent>
  <groupId>de.oheimbrecht</groupId>
  <artifactId>ReadExcelHeader</artifactId>
  <version>1.0.2</version>
  <name>Read Excel Header</name>
  <description>Pentaho Step plugin for reading the header from an excel file</description>
 <developers>
		<developer>
			<name>Oscar Heimbrecht</name>
			<email>github@oheimbrecht.de</email>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
	</developers>
	
	<properties>
		<license.licenseName>apache_v2</license.licenseName>
		
		<pdi.version>9.0.0.0-SNAPSHOT</pdi.version>
		<pdi.home>/Volumes/SD/Programme/data-integration-9.0</pdi.home>

		<!-- Pentaho dependencies -->
		<org.eclipse.swt.version>4.6</org.eclipse.swt.version>
		<org.eclipse.jface.version>3.3.0-I20070606-0010</org.eclipse.jface.version>

		<!-- Third-party dependencies -->
		<commons-lang.version>2.6</commons-lang.version>
		<commons-vfs2.version>2.1-20150824</commons-vfs2.version>
	</properties>
	
<build>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    		<plugin>
    			<groupId>org.eclipse.m2e</groupId>
    			<artifactId>lifecycle-mapping</artifactId>
    			<version>1.0.0</version>
    			<configuration>
    				<lifecycleMappingMetadata>
    					<pluginExecutions>
    						<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>
											jacoco-maven-plugin
										</artifactId>
										<versionRange>
											[0.7.2.201409121644,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
							</pluginExecution>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>
    									org.pentaho.maven.plugins
    								</groupId>
    								<artifactId>
    									license-helper-maven-plugin
    								</artifactId>
    								<versionRange>[1.27,)</versionRange>
    								<goals>
    									<goal>bundle</goal>
    									<goal>check-license</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore></ignore>
    							</action>
    						</pluginExecution>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>
    									com.soebes.maven.plugins
    								</groupId>
    								<artifactId>
    									iterator-maven-plugin
    								</artifactId>
    								<versionRange>
    									[0.5.1,)
    								</versionRange>
    								<goals>
    									<goal>iterator</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore></ignore>
    							</action>
    						</pluginExecution>
    					</pluginExecutions>
    				</lifecycleMappingMetadata>
    			</configuration>
    		</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>distro-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>${project.artifactId}-${project.version}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>assembly/plugin.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created 
						after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<!-- Excludes integration tests when unit tests are run. -->
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo
									message="Installed the plugin in PDI installation in ${pdi.home}. To test, please restart Spoon." />

								<!-- remove previous installations -->
								<delete dir="${pdi.home}/plugins/steps/${project.artifactId}" />
								

								<!-- put fresh files in place -->
 								<mkdir dir="${pdi.home}/plugins/steps/${project.artifactId}" /> -->
								
 								<unzip
 									src="${project.build.directory}/${project.artifactId}-${project.version}.zip"
 									dest="${pdi.home}/plugins/steps/" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


	<dependencies>
		<dependency>
    		<groupId>org.apache.poi</groupId>
    		<artifactId>poi</artifactId>
    		<version>3.17</version>
		</dependency>
		<dependency>
    		<groupId>org.apache.poi</groupId>
    		<artifactId>poi-ooxml</artifactId>
    		<version>3.17</version>
		</dependency>
		<dependency>
			<groupId>pentaho-kettle</groupId>
			<artifactId>kettle-engine</artifactId>
			<version>${pdi.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<artifactId>*</artifactId>
					<groupId>*</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>pentaho-kettle</groupId>
			<artifactId>kettle-core</artifactId>
			<version>${pdi.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<artifactId>*</artifactId>
					<groupId>*</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>pentaho-kettle</groupId>
			<artifactId>kettle-ui-swt</artifactId>
			<version>${pdi.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>metastore</artifactId>
			<scope>provided</scope>
			<version>${pdi.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>*</artifactId>
					<groupId>*</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>


	</dependencies>
</project>